Constructor is used to initialize user defined values to instance variables during object
creation.

Constructor is used to write the business logics of the applications. These logics are executed
during object creation through constructor.

Rules to declare constructor in java

1. constructor name & class name must be same
2. constructor not allowed to have return types
3. constructor should able to accept parameters


Default Construcotr
1. If user have not defined any constructor.
2. Compiler will declare default constructor with zero arguements and empty implementations.
3. Default constructor is executed at runtime.
4. During comilation process, compiler checks object created method new keyword holds class name
base Test() as a 0 arguement constructor. So compiler creates this 0 arguement construcotr at run
time and also executed at run time.
5. Default constructor always generated by compiler, runtime executed by JVM

Example 1

class TestOne 
{
	void m1(){
		System.out.println("M1 Method");
	}
	/*
	default constructor 
	TestOne()
	{
		//empty implementation, compiler creates this
		}

	*/

	public static void main(String[] args) 
	{
		TestOne t = new TestOne();
		t.m1();
	}
}



Type of constructor
Default Constructor: 0 arguement constructor, empty implementations
User defined construcotr: As per application user can define 0 arguement constructor and also
parameterized constructor


Example 2

class  TestTwo
{
	void M1(){
		System.out.println("M oka Method");
	}
	TestTwo(){
		System.out.println("0 arguemtn default constructor");
	}
	TestTwo(int a){
		System.out.println("1 arguement user defined constructor");
	}
	public static void main(String[] args) 
	{
		System.out.println("Namasthe rabhay");
		TestTwo t = new TestTwo();
		TestTwo t1 = new TestTwo(8);
	}

}

6. If user declares at least one constructor, compiler do not declares 0 arguement default constructor

Purpose/Application of Constructor:
7. Constructor is used to write the business logics of the applications. These logics are executed
during object creation through constructor.

class TestThree 
{
	TestThree(){
		System.out.println("Pehala usage of constructor");
	}

	public static void main(String[] args) 
	{
		TestThree t1 = new TestThree();
		System.out.println("Hello World!");
	}
}


8. class TestFour 
{
	//instance variable
	int eid;
	String ename;
	double esal;
	
	void display(){
		System.out.println("Employee Id is "+eid);
		System.out.println("Employee Name is "+ename);
		System.out.println("Employee Salary is "+esal);
	}
	public static void main(String[] args) 
	{
		TestFour t1 = new TestFour();
		t1.display();
		System.out.println("Namasthe Office"); //compiler created 0 default constructor

	}
}

9. class TestFive 
{
	int eid;
	String ename;
	double esal;
	void display(){
		System.out.println("Employee Id is "+eid);
		System.out.println("Employee Salary is "+esal);
		System.out.println("Employee name is "+ename);
	}
	TestFive(){
		eid = 20;
		ename = "Ram";
		esal = 4859.87;
	}
	public static void main(String[] args) 
	{
		TestFive t1 = new TestFive();
		t1.display();
		System.out.println("Hello World!");
	}
}



